{"version":3,"sources":["App.module.css","components/NewController/NewController.module.css","services/Fetch.js","services/Controllers.js","components/Variable/Variable.js","components/Controller/Controller.js","components/NewController/NewController.js","components/Status/Status.js","App.js","reportWebVitals.js","index.js","components/Controller/Controller.module.css"],"names":["module","exports","request","host","url","complete","always","failed","path","fetch","method","cache","then","response","json","ok","error","status","body","catch","VariableRow","args","name","value","onChange","update","updating","icon","faSyncAlt","className","faSave","onClick","save","faTrashAlt","delete","NewVariableRow","updateName","placeholder","updateValue","Controller","useState","processing","setProcessing","variables","setVariables","newVariable","setNewVariable","deleted","setDeleted","useEffect","controller","updateNewVariable","event","field","updatedNewVariable","target","replace","saveVariable","id","isNew","api","updatedVariables","deleteVariable","buildVariableRow","variableName","updateVariable","classes","Title","Name","size","Object","keys","map","variable","buildNewVariableRow","NewController","saving","setSaving","setName","createController","create","Status","setStatus","updatedStatus","startedAt","root","App","controllers","setControllers","setError","loading","setLoading","length","setTimeout","deleteController","updatedControllers","href","style","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ec4d0f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"ButtonIcon\":\"App_ButtonIcon__2QY-U\",\"Updating\":\"App_Updating__2ZyUt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewController\":\"NewController_NewController__3v_UI\"};","\nconst request = (host, url, complete, always, failed) => {\n    const path = host + \"/\" + url;\n    fetch(path, {\n        method: 'GET',\n        cache: 'no-cache',\n    })\n        .then(response => {\n            if (always) always();\n            response.json().then(json => {\n                if (response.ok) {\n                    complete(json);\n                } else {\n                    if (failed) failed({\n                        error: `server error ${response.status} calling ${path}`,\n                        status: response.status,\n                        body: json,\n                    })\n                }\n            });\n        })\n        .catch(error => {\n            if (always) always();\n            if (failed) failed({\n                error: `failed to fetch from ${path}`\n            });\n        });\n}\n\nexport default request;\n","import request from './Fetch';\n\n// const host = \"http://127.0.0.1:5000\";\nconst host = \"https://siemens-controller.herokuapp.com\";\n\nexport const saveVariable = (controller, name, value, complete, always, failed) => {\n  if (!name) return;\n  const path = `controller/${controller}/variable/set?${name}=${value}`\n  request(host, path, complete, always, failed);\n}\n\nexport const deleteVariable = (controller, name, complete, always, failed) => {\n  const path = `controller/${controller}/variable/delete?${name}`\n  request(host, path, complete, always, failed);\n}\n\nexport const createController = (name, complete, always, failed) => {\n  request(host, `controller/${name}/create`, complete, always, failed);\n}\n\nexport const deleteController = (name, complete, always, failed) => {\n  request(host, `controller/${name}/delete`, complete, always, failed);\n}\n\nexport const loadControllers = (complete, always, failed) => {\n  request(host, `controller`, complete, always, failed);\n}\n\nexport const readStatus = (complete, always, failed) => {\n  request(host, `status`, complete, always, failed);\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave, faTrashAlt, faSyncAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst VariableRow = (args) => {\n  return (\n    <tr>\n      <td>{args.name}</td>\n      <td>\n        <input value={args.value} onChange={args.update} />\n      </td>\n      <td>\n        <button>\n          {\n            args.updating ?\n              <FontAwesomeIcon icon={faSyncAlt} className=\"fa-spin\" /> :\n              <FontAwesomeIcon icon={faSave} onClick={args.save} />\n          }\n        </button>\n      </td>\n      <td>\n        <button>\n          <FontAwesomeIcon icon={faTrashAlt} onClick={args.delete} />\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nconst NewVariableRow = (args) => {\n  return (\n    <tr>\n      <td>\n        <input value={args.name} onChange={args.updateName} placeholder=\"new name\" />\n      </td>\n      <td>\n        <input value={args.value} onChange={args.updateValue} placeholder=\"value\" />\n      </td>\n      <td>\n        <button>\n          {\n            args.updating ?\n              <FontAwesomeIcon icon={faSyncAlt} className=\"fa-spin\" /> :\n              <FontAwesomeIcon icon={faSave} onClick={args.save} />\n          }\n        </button>\n      </td>\n      <td>\n      </td>\n    </tr>\n  );\n}\n\nexport { VariableRow, NewVariableRow };\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSyncAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport classes from './Controller.module.css';\n\nimport { useEffect, useState } from 'react';\nimport * as api from '../../services/Controllers';\nimport { VariableRow, NewVariableRow } from '../Variable/Variable';\n\nconst Controller = (args) => {\n  const [processing, setProcessing] = useState(false);\n\n  const [variables, setVariables] = useState({ ...args.variables });\n  const [newVariable, setNewVariable] = useState({ name: '', value: '' });\n\n  const [deleted, setDeleted] = useState(false);\n\n  useEffect(() => {\n    if (deleted) {\n      args.delete(controller);\n    }\n  });\n\n  const controller = args.controller;\n\n  const updateVariable = (variableName, event) => {\n    const updatedVariables = { ...variables };\n    updatedVariables[variableName] = event.target.value;\n    setVariables(updatedVariables);\n  };\n\n  const updateNewVariable = (event, field) => {\n    const updatedNewVariable = { ...newVariable };\n    let value = event.target.value;\n    if (field === 'name') value = value.replace(/\\s/g, '');\n    updatedNewVariable[field] = value;\n    setNewVariable(updatedNewVariable);\n  }\n\n  const saveVariable = (id, name, value, isNew) => {\n    if (processing || !name) return;\n    setProcessing(id);\n    api.saveVariable(controller, name, value, () => {\n      const updatedVariables = { ...variables };\n      updatedVariables[name] = value;\n      setVariables(updatedVariables);\n      if (isNew) setNewVariable({ name: '', value: '' });\n    }, () => {\n      setProcessing(false);\n    });\n  };\n\n  const deleteVariable = (id, name) => {\n    if (processing) return;\n    setProcessing(id);\n    api.deleteVariable(controller, name, () => {\n      const updatedVariables = { ...variables };\n      delete updatedVariables[name];\n      setVariables(updatedVariables);\n    }, () => {\n      setProcessing(false);\n    });\n  };\n\n  const deleteController = () => {\n    if (processing) return;\n    setProcessing('@');\n    api.deleteController(controller, () => {\n      setDeleted(controller);\n    }, () => {\n      setProcessing(false);\n    });\n  };\n\n  const buildVariableRow = (name) => {\n    if (!name) return;\n    const id = `${controller}-${name}`;\n    const value = variables[name];\n    return (\n      <VariableRow\n        key={id}\n        name={name}\n        value={value}\n        updating={processing === id}\n        update={(event) => updateVariable(name, event)}\n        save={() => saveVariable(id, name, value)}\n        delete={(event) => deleteVariable(id, name, event)}\n      />\n    );\n  }\n\n  const buildNewVariableRow = () => {\n    const id = `${controller}@new_variable`;\n    const name = newVariable.name;\n    const value = newVariable.value;\n    return (\n      <NewVariableRow\n        key={id}\n        name={name}\n        value={value}\n        updating={processing === id}\n        save={() => saveVariable(id, name, value, true)}\n        updateName={(event) => updateNewVariable(event, 'name')}\n        updateValue={(event) => updateNewVariable(event, 'value')}\n      />\n    );\n  }\n\n  return (\n    <div className={classes.Controller}>\n      <div className={classes.Title}>\n        <span className={classes.Name}>{controller}</span>\n        {\n          processing === `@` ?\n            <FontAwesomeIcon\n              icon={faSyncAlt} className=\"fa-spin\" size=\"xs\" /> :\n            <FontAwesomeIcon\n              icon={faTrashAlt} size=\"xs\"\n              onClick={deleteController}\n            />\n        }\n      </div>\n      <table className=\"pure-table\">\n        <thead>\n          <tr>\n            <td>Variable</td>\n            <td>Value</td>\n            <td>Save</td>\n            <td>Delete</td>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            Object.keys(variables).map((variable) => buildVariableRow(variable))\n          }\n          {\n            buildNewVariableRow()\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Controller;\n","import classes from './NewController.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faSyncAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { createController } from '../../services/Controllers';\nimport { useState } from 'react';\n\nconst NewController = (args) => {\n  const [saving, setSaving] = useState(false);\n  const [name, setName] = useState('');\n\n  const create = () => {\n    if (saving || !name) return;\n    setSaving(true);\n    createController(name, () => {\n      args.create(name);\n      setName('');\n    }, () => {\n      setSaving(false);\n    })\n  }\n\n  const updateName = (event) => {\n    setName(event.target.value.replace(/\\s/g, ''));\n  }\n\n  return (\n    <div className={classes.NewController}>\n      <h1>Create new controller</h1>\n      <div>\n        <input value={name} onChange={updateName} />\n        <button>\n          {\n            saving ?\n              <FontAwesomeIcon icon={faSyncAlt} className=\"fa-spin\" /> :\n              <FontAwesomeIcon icon={faSave} onClick={create} />\n          }\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default NewController;\n","import { useEffect, useState } from 'react';\nimport { readStatus } from '../../services/Controllers';\n\nconst Status = args => {\n    const [status, setStatus] = useState({});\n\n    useEffect(() => {\n        readStatus((updatedStatus) => {\n            setStatus(updatedStatus);\n        })\n    }, []);\n\n    return (\n        <p>\n            {status.startedAt} | {status.root}\n        </p>\n    )\n}\nexport default Status;","import classes from './App.module.css';\nimport { useState, useEffect } from 'react';\nimport * as api from './services/Controllers';\nimport Controller from './components/Controller/Controller';\nimport NewController from './components/NewController/NewController'\nimport Status from './components/Status/Status'\n\nconst App = () => {\n  const [controllers, setControllers] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(controllers).length || loading) return;\n    setLoading(true);\n    api.loadControllers((response) => {\n      setControllers(response);\n      setError('');\n      setLoading(false);\n    }, () => {\n    }, (error) => {\n      setError(`${error.error}. Re-try in 5 seconds...`);\n      setError(`${error.error}. Re-try in 5 seconds...`);\n      setTimeout(() => setLoading(false), 5000);\n    });\n  }, [controllers, loading, error]);\n\n  const refresh = () => {\n    setControllers({});\n  }\n\n  const createController = (name) => {\n    const updatedControllers = { ...controllers };\n    updatedControllers[name] = {};\n    setControllers(updatedControllers);\n  }\n\n  const deleteController = (name) => {\n    const updatedControllers = { ...controllers };\n    delete updatedControllers[name];\n    setControllers(updatedControllers);\n  }\n\n  return (\n    <>\n      {error ? <p>{error}</p> : ''}\n      {loading ? <p>Loading...</p> : ''}\n      <button onClick={refresh}>Refresh</button>\n      <a href=\"demo/\" target=\"_blank\" style={{ marginLeft: '10px' }}>\n        Demo application\n      </a>\n      <h1>Controllers</h1>\n      <div className={classes.App}>\n        {\n          Object.keys(controllers).map(\n            (controller) => <Controller\n              key={controller}\n              controller={controller}\n              variables={controllers[controller]}\n              delete={deleteController}\n            />\n          )\n        }\n        <NewController create={createController} />\n        <hr />\n        <Status />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'purecss/build/pure.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controller\":\"Controller_Controller__1Aul2\",\"Title\":\"Controller_Title__Y5eAi\",\"Name\":\"Controller_Name__1PVxC\"};"],"sourceRoot":""}